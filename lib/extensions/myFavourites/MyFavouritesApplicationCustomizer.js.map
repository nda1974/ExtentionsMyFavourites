{"version":3,"sources":["extensions/myFavourites/MyFavouritesApplicationCustomizer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,oCAAsC;AACtC,oDAAiD;AAEjD,sEAIwC;AASxC,yFAAoF;AAGpF,IAAM,UAAU,GAAW,mCAAmC,CAAC;AAY/D,qFAAqF;AACrF;IACU,qDAAuE;IADjF;;IAsBA,CAAC;IAlBQ,kDAAM,GAAb;QACE,IAAI,WAA+B,CAAC;QACpC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,qCAAe,CAAC,GAAG,CAAC,CAAC;QAErF,oCAAoC;QACpC,IAAM,OAAO,GAAiD,KAAK,CAAC,aAAa,CAC/E,4BAAkB,EAClB;YACE,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CACF,CAAC;QAEF,mDAAmD;QACnD,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC;QAEjD,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAE3B,CAAC;IAjBD;QADC,qBAAQ;mEAkBR;IACH,wCAAC;CAtBD,AAsBC,CArBS,+CAAyB,GAqBlC;kBAtBoB,iCAAiC","file":"extensions/myFavourites/MyFavouritesApplicationCustomizer.js","sourcesContent":["import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { override } from '@microsoft/decorators';\r\nimport { Log } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseApplicationCustomizer, \r\n  PlaceholderContent, \r\n  PlaceholderName \r\n} from '@microsoft/sp-application-base';\r\nimport { Dialog } from '@microsoft/sp-dialog';\r\n\r\nimport * as strings from 'MyFavouritesApplicationCustomizerStrings';\r\n\r\n\r\n\r\n//import * as strings from 'MyFavouritesApplicationCustomizerStrings';\r\nimport { IMyFavouritesTopBarProps } from \"./components/MyFavouritesTopBar/IMyFavouritesTopBarProps\";\r\nimport MyFavouritesTopBar from \"./components/MyFavouritesTopBar/MyFavouritesTopBar\";\r\n\r\n\r\nconst LOG_SOURCE: string = 'MyFavouritesApplicationCustomizer';\r\n\r\n/**\r\n * If your command set uses the ClientSideComponentProperties JSON input,\r\n * it will be deserialized into the BaseExtension.properties object.\r\n * You can define an interface to describe it.\r\n */\r\nexport interface IMyFavouritesApplicationCustomizerProperties {\r\n  // This is an example; replace with your own property\r\n  testMessage: string;\r\n}\r\n\r\n/** A Custom Action which can be run during execution of a Client Side Application */\r\nexport default class MyFavouritesApplicationCustomizer\r\n  extends BaseApplicationCustomizer<IMyFavouritesApplicationCustomizerProperties> {\r\n\r\n  @override\r\n  public onInit(): Promise<void> {\r\n    let placeholder: PlaceholderContent;\r\n    placeholder = this.context.placeholderProvider.tryCreateContent(PlaceholderName.Top);\r\n\r\n    // init the react top bar component.\r\n    const element: React.ReactElement<IMyFavouritesTopBarProps> = React.createElement(\r\n      MyFavouritesTopBar,\r\n      {\r\n        context: this.context\r\n      }\r\n    );\r\n\r\n    // render the react element in the top placeholder.\r\n    ReactDOM.render(element, placeholder.domElement);\r\n\r\n    return Promise.resolve();\r\n\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}