{"version":3,"sources":["extensions/services/MyFavouritesService.ts"],"names":[],"mappings":"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","file":"extensions/services/MyFavouritesService.js","sourcesContent":["import { IMyFavoutitesService } from \"./IMyFavouritesService\";\r\nimport { ApplicationCustomizerContext } from \"@microsoft/sp-application-base\";\r\nimport { IMyFavouritesTopBarProps } from \"../myFavourites/components/MyFavouritesTopBar/IMyFavouritesTopBarProps\";\r\nimport pnp, {Web, List, ItemAddResult, ItemUpdateResult } from \"sp-pnp-js\";\r\nimport { IMyFavouriteItem } from \"../interfaces/IMyFavouriteItem\";\r\nimport { Log } from \"@microsoft/sp-core-library\";\r\nimport { SPHttpClient, SPHttpClientResponse, ISPHttpClientOptions, ISPHttpClientConfiguration, ODataVersion } from '@microsoft/sp-http';\r\nimport SPHttpClientConfiguration from \"@microsoft/sp-http/lib/spHttpClient/SPHttpClientConfiguration\";\r\nimport HttpClientConfiguration from \"@microsoft/sp-http/lib/httpClient/HttpClientConfiguration\";\r\n\r\nconst LOG_SOURCE: string = \"CC_MyFavourites_ApplicationCustomizer\";\r\nconst FAVOURITES_LIST_NAME: string = \"Favourites\";\r\nconst MANDATORY_FAVOURITES_LIST_NAME: string = \"MandatoryFavourites\";\r\n\r\nexport class MyFavouritesService implements IMyFavoutitesService {\r\n    private _context: ApplicationCustomizerContext;\r\n    private _props: IMyFavouritesTopBarProps;\r\n    private _currentWebUrl: string;\r\n    private _sessionStorageKey: string = \"MyFavourites_\";\r\n\r\n    constructor(_props: IMyFavouritesTopBarProps) {\r\n        this._props = _props;\r\n        this._context = _props.context;\r\n        // this._currentWebUrl = this._context.pageContext.web.absoluteUrl;\r\n        this._currentWebUrl = \"https://lbforsikring.sharepoint.com/sites/intra\";\r\n        this._sessionStorageKey += this._currentWebUrl;\r\n        pnp.setup({\r\n            sp: {\r\n                // baseUrl: this._currentWebUrl\r\n                baseUrl: \"https://lbforsikring.sharepoint.com/sites/intra\"\r\n            }\r\n        });\r\n    }\r\n\r\n    public async getMyFavourites(tryFromCache: boolean): Promise<IMyFavouriteItem[]> {\r\n        let myFavourites: IMyFavouriteItem[] = [];\r\n        let lbFavourites: IMyFavouriteItem[] = [];\r\n        // if(tryFromCache) {\r\n        //     myFavourites = this._fetchFromSessionStorge();\r\n        //     if(myFavourites.length) {\r\n        //         return myFavourites;\r\n        //     }\r\n        // }\r\n\r\n        myFavourites = await this._fetchFromSPList();\r\n        lbFavourites = await this._fetchFromSPList2();\r\n        for (var i = 0; i < myFavourites.length; i++) {\r\n            myFavourites[i].Mandatory==false;\r\n        }\r\n        for (var i = 0; i < lbFavourites.length; i++) {\r\n            lbFavourites[i].Mandatory==true;\r\n        }\r\n        var spread = [...myFavourites,...lbFavourites];\r\n\r\n        // let favInCache: string = JSON.stringify(myFavourites);\r\n        // let favInCache: string = JSON.stringify(spread);\r\n        // window.sessionStorage.setItem(this._sessionStorageKey, favInCache);\r\n        // return myFavourites;\r\n        return spread;\r\n        \r\n    }\r\n\r\n    public async saveFavourite(favouriteItem: IMyFavouriteItem): Promise<boolean> {\r\n        \r\n        return pnp.sp.web.lists.getByTitle(FAVOURITES_LIST_NAME).items.add({\r\n            'Title': favouriteItem.Title,\r\n            'Description': favouriteItem.Description,\r\n            'ItemUrl': window.location.href,\r\n            'Mandatory':false\r\n        }).then(async (result: ItemAddResult): Promise<boolean> => {\r\n            let addedItem: IMyFavouriteItem = result.data;\r\n            console.log(addedItem);\r\n            await this.getMyFavourites(false);\r\n            return true;\r\n        }, (error: any): boolean => {\r\n            return false;\r\n        });\r\n    }\r\n\r\n    public async deleteFavourite(favouriteItemId: number): Promise<boolean> {\r\n        return pnp.sp.web.lists.getByTitle(FAVOURITES_LIST_NAME).items.getById(favouriteItemId).delete()\r\n        .then(async (): Promise<boolean> => {\r\n            await this.getMyFavourites(false);\r\n            return true;\r\n        }, (error: any): boolean => {\r\n            return false;\r\n        });\r\n    }\r\n\r\n    public async updateFavourite(favouriteItem: IMyFavouriteItem): Promise<boolean> {\r\n        return pnp.sp.web.lists.getByTitle(FAVOURITES_LIST_NAME).items.getById(favouriteItem.Id).update({\r\n            'Title': favouriteItem.Title,\r\n            'Description': favouriteItem.Description\r\n        }).then(async (result: ItemUpdateResult): Promise<boolean> => {\r\n            console.log(result);\r\n            await this.getMyFavourites(false);\r\n            return true;\r\n        }, (error: any): boolean => {\r\n            return false;\r\n        });\r\n    }\r\n\r\n    private _fetchFromSessionStorge(): IMyFavouriteItem[] {\r\n\r\n        let result: IMyFavouriteItem[] = [];\r\n        let stringResult: string = window.sessionStorage.getItem(this._sessionStorageKey);\r\n        if (stringResult) {\r\n            try {\r\n                Log.info(LOG_SOURCE, \"Fetched favourites from cache\");\r\n                result = JSON.parse(stringResult);\r\n            } catch (error) {\r\n                Log.error(LOG_SOURCE, error);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private async _fetchFromSPList(): Promise<IMyFavouriteItem[]> {\r\n        const currentUserId: number = await this._getUserId();\r\n        return pnp.sp.web.lists.getByTitle(FAVOURITES_LIST_NAME)\r\n            .items\r\n            .select(\r\n            \"Id\",\r\n            \"Title\",\r\n            \"ItemUrl\",\r\n            \"Description\",\r\n            \"Mandatory\"\r\n            )\r\n            .filter(\"Author eq \" + currentUserId)\r\n            .get()\r\n            .then((myFavourites: IMyFavouriteItem[]) => {\r\n                Log.info(LOG_SOURCE, \"Fetched favourites from list\");\r\n                return myFavourites;\r\n            })\r\n            .catch((error) => {\r\n                Log.error(LOG_SOURCE, error);\r\n                return [];\r\n            });\r\n    }\r\n    private async _fetchFromSPList2(): Promise<IMyFavouriteItem[]> {\r\n        const w = new Web(\"https://lbforsikring.sharepoint.com/sites/intra\");\r\n\r\n        const currentUserId: number = await this._getUserId();\r\n\r\n\r\n        return w.lists.getByTitle(MANDATORY_FAVOURITES_LIST_NAME)\r\n        .items\r\n        .select(\r\n        \"Id\",\r\n        \"Title\",\r\n        \"ItemUrl\",\r\n        \"Description\",\r\n        \"Mandatory\"\r\n        )\r\n        .get()\r\n        .then((myFavourites: IMyFavouriteItem[]) => {\r\n            Log.info(LOG_SOURCE, \"Fetched favourites from list\");\r\n            return myFavourites;\r\n        })\r\n        .catch((error) => {\r\n            Log.error(LOG_SOURCE, error);\r\n            return [];\r\n        });\r\n\r\n        // return pnp.sp.web.lists.getByTitle(MANDATORY_FAVOURITES_LIST_NAME)\r\n        //     .items\r\n        //     .select(\r\n        //     \"Id\",\r\n        //     \"Title\",\r\n        //     \"ItemUrl\",\r\n        //     \"Description\",\r\n        //     \"Mandatory\"\r\n        //     )\r\n        //     .get()\r\n        //     .then((myFavourites: IMyFavouriteItem[]) => {\r\n        //         Log.info(LOG_SOURCE, \"Fetched favourites from list\");\r\n        //         return myFavourites;\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         Log.error(LOG_SOURCE, error);\r\n        //         return [];\r\n        //     });\r\n    }\r\n\r\n    private _getUserId(): Promise<number> {\r\n        return pnp.sp.site.rootWeb.ensureUser(this._context.pageContext.user.email).then(result => {\r\n            return result.data.Id;\r\n        });\r\n    }\r\n}\r\n\r\n"],"sourceRoot":"..\\..\\..\\src"}