define("c0c518b8-701b-4f6f-956d-5782772bb731_1.4.1", ["react","react-dom","office-ui-fabric-react","@microsoft/decorators","@ms/sp-telemetry","@microsoft/sp-core-library","@microsoft/sp-application-base","@microsoft/office-ui-fabric-react-bundle","@microsoft/sp-webpart-base"], (function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_15__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 10);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ ((function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var ReactDom = __webpack_require__(3);
var office_ui_fabric_react_1 = __webpack_require__(4);
var sp_core_library_1 = __webpack_require__(11);
var sp_application_base_1 = __webpack_require__(12);
var sp_telemetry_1 = __webpack_require__(7);
var BaseDialog_1 = __webpack_require__(2);
var FabricDialogWrapper_1 = __webpack_require__(13);
var AlertDialog_1 = __webpack_require__(8);
var PromptDialog_1 = __webpack_require__(9);
function _getInternalDialogApi(dialog) {
    return dialog; 
}
exports._getInternalDialogApi = _getInternalDialogApi;
var DialogManager = (function () {
    function DialogManager(config) {
        sp_core_library_1.Validate.isNotNullOrUndefined(config, 'DialogManager Configuration');
        sp_core_library_1.Validate.isNotNullOrUndefined(config.domElement, 'Dialog Container');
        this._container = config.domElement;
        this._mainDialogDiv = document.createElement('DIV');
        this._childDialogDiv = document.createElement('DIV');
        this._container.appendChild(this._mainDialogDiv);
        this._container.appendChild(this._childDialogDiv);
        this._requests = [];
    }
    Object.defineProperty(DialogManager, "instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new DialogManager(sp_application_base_1._DialogManagerConfiguration.instance);
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    DialogManager.prototype.alert = function (message, options) {
        return this.show(new AlertDialog_1.default(message), options);
    };
    DialogManager.prototype.prompt = function (message, options) {
        var resolve = function () { return; };
        var promise = new Promise(function (res) { return resolve = res; });
        this.show(new PromptDialog_1.default(message, resolve), options);
        return promise;
    };
    Object.defineProperty(DialogManager.prototype, "isShowingDialog", {
        get: function () {
            return this._activeDialogs.filter((function (d) { return _getInternalDialogApi(d)._state === BaseDialog_1.DialogState.Open; })).length > 0;
        },
        enumerable: true,
        configurable: true
    });
    DialogManager.prototype.show = function (dialog, options) {
        var _this = this;
        sp_core_library_1.Validate.isNotNullOrUndefined(dialog, 'dialog');
        var _dialog = _getInternalDialogApi(dialog);
        var qosMonitor = new sp_telemetry_1._QosMonitor('DialogManager.show');
        sp_telemetry_1._TraceLogger.logVerbose(DialogManager._logSource, 'New request to show a dialog has been submitted.');
        try {
            if (!_dialog._isActive) {
                var resolve_1 = function () { return; }, reject_1 = function () { return; };
                var promise = new Promise(function (resolveCallback, rejectCallback) {
                    resolve_1 = resolveCallback;
                    reject_1 = rejectCallback;
                }).then((function () { qosMonitor.writeSuccess(); }), (function (e) { qosMonitor.writeExpectedFailure('RequestRejected', e); }));
                var id = sp_core_library_1.Guid.newGuid();
                this._requests.push({ id: id, dialog: dialog, resolve: resolve_1, reject: reject_1, options: options });
                _dialog._requestAck(id);
                _dialog._setState(BaseDialog_1.DialogState.Pending);
                Promise.resolve(undefined).then((function () {
                    _this._processNextRequest();
                }));
                return promise;
            }
            else {
                qosMonitor.writeExpectedFailure('DuplicateRequest');
                var error = new Error('Cannot accept new requests for active dialogs.');
                sp_telemetry_1._TraceLogger.logError(DialogManager._logSource, error);
                return Promise.reject(error);
            }
        }
        catch (e) {
            qosMonitor.writeUnexpectedFailure('UnhandledError', e);
            return Promise.reject(e);
        }
    };
    DialogManager.prototype._showSecondary = function (dialog, ownerRequestId, options) {
        sp_core_library_1.Validate.isNotNullOrUndefined(dialog, 'dialog');
        sp_core_library_1.Validate.isNotNullOrUndefined(ownerRequestId, 'ownerRequestId');
        var _dialog = _getInternalDialogApi(dialog);
        var qosMonitor = new sp_telemetry_1._QosMonitor('DialogManager.showSecondary');
        sp_telemetry_1._TraceLogger.logVerbose(DialogManager._logSource, 'A request to show a secondary dialog has been submitted.');
        try {
            if (this._hasPermissionToShow(ownerRequestId)) {
                var resolve_2 = function () { return; }, reject_2 = function () { return; };
                var promise = new Promise(function (resolveCallback, rejectCallback) {
                    resolve_2 = resolveCallback;
                    reject_2 = rejectCallback;
                }).then((function () { qosMonitor.writeSuccess(); }), (function (e) { qosMonitor.writeExpectedFailure('RequestRejected', e); }));
                var id = sp_core_library_1.Guid.newGuid();
                var isSecondary = true;
                this._requests.unshift({ id: id, dialog: dialog, resolve: resolve_2, reject: reject_2, isSecondary: isSecondary, options: options });
                _dialog._requestAck(id, true);
                _dialog._setState(BaseDialog_1.DialogState.Approved);
                this._open(dialog);
                return promise;
            }
            else {
                var error = new Error('Only an active dialog can show a secondary dialog.');
                sp_telemetry_1._TraceLogger.logError(DialogManager._logSource, error);
                qosMonitor.writeExpectedFailure('PermissionDenied');
                return Promise.reject(error);
            }
        }
        catch (e) {
            sp_telemetry_1._TraceLogger.logErrorData({
                source: DialogManager._logSource,
                error: e
            });
            qosMonitor.writeUnexpectedFailure('UnhandledError', e);
            return Promise.reject(e);
        }
    };
    DialogManager.prototype._abort = function (dialog) {
        var _dialog = _getInternalDialogApi(dialog);
        if (dialog && !_dialog._isActive) {
            _dialog._setState(BaseDialog_1.DialogState.New);
            this._removeRequest(_dialog._requestId, false);
        }
    };
    DialogManager.prototype._rejectOnOpen = function (dialog) {
        var _this = this;
        var _dialog = _getInternalDialogApi(dialog);
        if (dialog) {
            this._getUiComponent(dialog).close().then((function () {
                _dialog._setState(BaseDialog_1.DialogState.New);
                _this._removeRequest(_dialog._requestId, false);
            }));
        }
    };
    DialogManager.prototype._close = function (dialog) {
        var _this = this;
        sp_core_library_1.Validate.isNotNullOrUndefined(dialog, 'dialog');
        var _dialog = _getInternalDialogApi(dialog);
        var qosMonitor = new sp_telemetry_1._QosMonitor('DialogManager.close');
        if (_dialog._isActive) {
            var closePromise = this._getUiComponent(dialog).close().then((function () {
                _dialog.onAfterClose();
                _dialog._setState(BaseDialog_1.DialogState.Closed);
                _this._removeRequest(_dialog._requestId, true);
            })).then((function () { qosMonitor.writeSuccess(); }), (function (e) { qosMonitor.writeExpectedFailure('RequestRejected', e); }));
            closePromise.then((function () {
                if (_this._pendingRequests.length > 0 || _this._hasHiddenDialog) {
                    _this._processNextRequest();
                }
            }));
            return closePromise;
        }
        else {
            qosMonitor.writeSuccess();
            return Promise.resolve(undefined);
        }
    };
    Object.defineProperty(DialogManager.prototype, "_activeDialogs", {
        get: function () {
            return this._requests.filter((function (r) { return _getInternalDialogApi(r.dialog)._isActive; })).map((function (r) { return r.dialog; }));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DialogManager.prototype, "_pendingRequests", {
        get: function () {
            return this._requests.filter((function (r) { return _getInternalDialogApi(r.dialog)._state === BaseDialog_1.DialogState.Pending; }));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DialogManager.prototype, "_hasHiddenDialog", {
        get: function () {
            return this._requests.filter((function (r) { return _getInternalDialogApi(r.dialog)._state === BaseDialog_1.DialogState.Hidden; })).length > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DialogManager.prototype, "_currentlyOpenDialogRequest", {
        get: function () {
            return this._requests.filter((function (r) { return _getInternalDialogApi(r.dialog)._state === BaseDialog_1.DialogState.Open; }))[0];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DialogManager.prototype, "_config", {
        get: function () {
            return sp_application_base_1._DialogManagerConfiguration.instance;
        },
        enumerable: true,
        configurable: true
    });
    DialogManager.prototype._processNextRequest = function () {
        if (this.isShowingDialog) {
            return;
        }
        var qosMonitor = new sp_telemetry_1._QosMonitor('DialogManager.processRequest');
        try {
            for (var _i = 0, _a = this._requests; _i < _a.length; _i++) {
                var request = _a[_i];
                var _dialog = _getInternalDialogApi(request.dialog);
                var abort = false;
                if (!request.isSecondary && request.options) {
                    var confirmOpen = request.options.confirmOpen ? request.options.confirmOpen() : true;
                    abort = !confirmOpen;
                }
                if (abort) {
                    var message = 'The request to show the dialog was aborted.';
                    sp_telemetry_1._TraceLogger.logVerbose(DialogManager._logSource, message);
                    request.reject(new Error(message));
                    this._abort(request.dialog);
                }
                else if (_dialog._state === BaseDialog_1.DialogState.Approved ||
                    _dialog._state === BaseDialog_1.DialogState.Hidden) {
                    this._open(request.dialog);
                }
                else if (_dialog._state === BaseDialog_1.DialogState.Pending) {
                    if (this._config.allowDialogs) {
                        _dialog._setState(BaseDialog_1.DialogState.Approved);
                        this._open(request.dialog);
                    }
                    else {
                        var error = new Error('The application cannot accept dialogs at the moment.');
                        sp_telemetry_1._TraceLogger.logError(DialogManager._logSource, error);
                        request.reject(error);
                        _dialog._setState(BaseDialog_1.DialogState.Rejected);
                        this._removeRequest(request.id, false);
                    }
                    break;
                }
            }
            qosMonitor.writeSuccess();
        }
        catch (e) {
            sp_telemetry_1._TraceLogger.logErrorData({
                source: DialogManager._logSource,
                error: e
            });
            qosMonitor.writeUnexpectedFailure('UnhandledError', e);
        }
    };
    DialogManager.prototype._removeRequest = function (reqId, shouldResolve) {
        if (reqId) {
            for (var i = 0; i < this._requests.length; i++) {
                var req = this._requests[i];
                if (req.id === reqId) {
                    if (shouldResolve) {
                        req.resolve();
                    }
                    this._requests.splice(i, 1);
                }
            }
        }
    };
    DialogManager.prototype._hide = function (dialog) {
        var _dialog = _getInternalDialogApi(dialog);
        if (dialog && _dialog._state === BaseDialog_1.DialogState.Open) {
            this._getUiComponent(dialog).close().then((function () {
                _dialog._setState(BaseDialog_1.DialogState.Hidden);
            }));
        }
    };
    DialogManager.prototype._unhide = function (dialog) {
        var _dialog = _getInternalDialogApi(dialog);
        if (dialog && _dialog._state === BaseDialog_1.DialogState.Hidden) {
            this._getUiComponent(dialog).open(dialog);
            _dialog._setState(BaseDialog_1.DialogState.Open);
        }
    };
    DialogManager.prototype._getUiComponent = function (dialog) {
        return dialog.isSecondary ? this._childUiComponent : this._mainUiComponent;
    };
    DialogManager.prototype._open = function (dialog) {
        var _this = this;
        var _dialog = _getInternalDialogApi(dialog);
        if (_dialog._state === BaseDialog_1.DialogState.Hidden) {
            this._unhide(dialog);
            return true;
        }
        if (_dialog._state === BaseDialog_1.DialogState.Approved) {
            if (this.isShowingDialog && dialog.isSecondary) {
                this._hide(this._currentlyOpenDialogRequest.dialog);
                if (!this._childUiComponent && this._childDialogDiv) {
                    ReactDom.render(React.createElement(FabricDialogWrapper_1.default, {
                        closeCallback: this._close,
                        ref: function (c) { _this._childUiComponent = c; }
                    }), this._childDialogDiv);
                }
                this._childUiComponent.open(dialog).then((function () {
                    _dialog._setState(BaseDialog_1.DialogState.Open);
                }));
                return true;
            }
            else {
                if (!this._mainUiComponent && this._mainDialogDiv) {
                    ReactDom.render(React.createElement(FabricDialogWrapper_1.default, {
                        closeCallback: this._close,
                        ref: function (c) { _this._mainUiComponent = c; }
                    }), this._mainDialogDiv);
                }
                this._mainUiComponent.open(dialog).then((function () {
                    _dialog._setState(BaseDialog_1.DialogState.Open);
                }));
                return true;
            }
        }
        return false;
    };
    DialogManager.prototype._hasPermissionToShow = function (requestId) {
        var request = this._getRequestById(requestId);
        return request && _getInternalDialogApi(request.dialog)._isActive && !this._currentlyOpenDialogRequest.isSecondary;
    };
    DialogManager.prototype._getRequestById = function (id) {
        return this._requests.filter((function (r) { return r.id.equals(id); }))[0];
    };
    DialogManager._logSource = sp_telemetry_1._LogSource.create('DialogManager');
    __decorate([
        office_ui_fabric_react_1.autobind
    ], DialogManager.prototype, "show", null);
    __decorate([
        office_ui_fabric_react_1.autobind
    ], DialogManager.prototype, "_abort", null);
    __decorate([
        office_ui_fabric_react_1.autobind
    ], DialogManager.prototype, "_rejectOnOpen", null);
    __decorate([
        office_ui_fabric_react_1.autobind
    ], DialogManager.prototype, "_close", null);
    __decorate([
        office_ui_fabric_react_1.autobind
    ], DialogManager.prototype, "_processNextRequest", null);
    __decorate([
        office_ui_fabric_react_1.autobind
    ], DialogManager.prototype, "_removeRequest", null);
    __decorate([
        office_ui_fabric_react_1.autobind
    ], DialogManager.prototype, "_hide", null);
    __decorate([
        office_ui_fabric_react_1.autobind
    ], DialogManager.prototype, "_unhide", null);
    __decorate([
        office_ui_fabric_react_1.autobind
    ], DialogManager.prototype, "_open", null);
    return DialogManager;
}());
exports.default = DialogManager;


/***/ })),
/* 1 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(6);
var sp_telemetry_1 = __webpack_require__(7);
var DialogManager_1 = __webpack_require__(0);
var Dialog_1 = __webpack_require__(5);
var DialogState;
(function (DialogState) {
    DialogState[DialogState["New"] = 0] = "New";
    DialogState[DialogState["Pending"] = 1] = "Pending";
    DialogState[DialogState["Rejected"] = 2] = "Rejected";
    DialogState[DialogState["Aborted"] = 3] = "Aborted";
    DialogState[DialogState["Approved"] = 4] = "Approved";
    DialogState[DialogState["Open"] = 5] = "Open";
    DialogState[DialogState["Closed"] = 6] = "Closed";
    DialogState[DialogState["Hidden"] = 7] = "Hidden";
})(DialogState = exports.DialogState || (exports.DialogState = {}));
var BaseDialog = (function () {
    function BaseDialog(config) {
        this._config = config || {};
        this._state = DialogState.New;
        this._isSecondary = false;
        this.close = this.close.bind(this);
        this.render = this.render.bind(this);
    }
    Object.defineProperty(BaseDialog.prototype, "_configuration", {
        get: function () {
            return this._config;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseDialog.prototype, "isSecondary", {
        get: function () {
            return this._isSecondary;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseDialog.prototype, "isOpen", {
        get: function () {
            return this._state === DialogState.Open;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseDialog.prototype, "isHidden", {
        get: function () {
            return this._state === DialogState.Hidden;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseDialog.prototype, "secondaryDialogProvider", {
        get: function () {
            if (this.isSecondary) {
                return undefined;
            }
            if (!this._secondaryDialogProvider && this._requestId) {
                this._secondaryDialogProvider = Dialog_1.SecondaryDialogProvider._create(DialogManager_1.default.instance, this._requestId);
            }
            return this._secondaryDialogProvider;
        },
        enumerable: true,
        configurable: true
    });
    BaseDialog.prototype.show = function (options) {
        if (DialogManager_1.default.instance) {
            return DialogManager_1.default.instance.show(this, options);
        }
        else {
            return Promise.reject(new Error('This application is not configured to accept dialogs.'));
        }
    };
    BaseDialog.prototype.close = function () {
        if (DialogManager_1.default.instance) {
            if (this._isActive) {
                return DialogManager_1.default.instance._close(this);
            }
            else {
                DialogManager_1.default.instance._abort(this);
            }
        }
        return Promise.resolve(undefined);
    };
    Object.defineProperty(BaseDialog.prototype, "domElement", {
        get: function () {
            return this._domElement;
        },
        enumerable: true,
        configurable: true
    });
    BaseDialog.prototype.onBeforeOpen = function () {
        return Promise.resolve(undefined);
    };
    BaseDialog.prototype.onAfterClose = function () {
    };
    Object.defineProperty(BaseDialog.prototype, "_isActive", {
        get: function () {
            return this._state === DialogState.Approved ||
                this._state === DialogState.Open ||
                this._state === DialogState.Hidden;
        },
        enumerable: true,
        configurable: true
    });
    BaseDialog.prototype._render = function (container) {
        var _this = this;
        this._domElement = container;
        if (!this._renderPromise) {
            var rejectRender_1, resolveRender_1;
            this._renderPromise = new Promise(function (res, rej) {
                resolveRender_1 = res;
                rejectRender_1 = rej;
            });
            this._closedWhileRendering = false;
            this.onBeforeOpen().then((function () {
                if (!_this._closedWhileRendering) {
                    _this.render();
                    resolveRender_1();
                }
                else {
                    rejectRender_1();
                }
            })).catch((function () {
                DialogManager_1.default.instance._rejectOnOpen(_this);
                rejectRender_1();
            }));
        }
        return this._renderPromise;
    };
    BaseDialog.prototype._setState = function (newState) {
        if (newState === DialogState.Closed) {
            this._secondaryDialogProvider = undefined;
            if (this._renderPromise) {
                this._closedWhileRendering = true;
                this._renderPromise = undefined;
            }
        }
        sp_telemetry_1._TraceLogger.logVerboseData({
            source: BaseDialog._logSource,
            message: "Dialog state changed from '" + DialogState[this._state] + "' to '" + DialogState[newState] + "'."
        });
        this._state = newState;
    };
    BaseDialog.prototype._requestAck = function (requestId, isSecondary) {
        this._requestId = requestId;
        this._isSecondary = !!isSecondary;
    };
    BaseDialog._logSource = sp_telemetry_1._LogSource.create('BaseDialog');
    __decorate([
        decorators_1.virtual
    ], BaseDialog.prototype, "onBeforeOpen", null);
    __decorate([
        decorators_1.virtual
    ], BaseDialog.prototype, "onAfterClose", null);
    return BaseDialog;
}());
exports.default = BaseDialog;


/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_4__;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(6);
var DialogManager_1 = __webpack_require__(0);
var AlertDialog_1 = __webpack_require__(8);
var PromptDialog_1 = __webpack_require__(9);
var Dialog = (function () {
    function Dialog() {
    }
    Dialog.alert = function (message, options) {
        var dialogManager = DialogManager_1.default.instance;
        return dialogManager ?
            dialogManager.alert(message, options) :
            Promise.resolve(undefined);
    };
    Dialog.prompt = function (message, options) {
        var dialogManager = DialogManager_1.default.instance;
        return dialogManager ?
            dialogManager.prompt(message, options) :
            Promise.resolve(undefined);
    };
    return Dialog;
}());
exports.default = Dialog;
var SecondaryDialogProvider = (function () {
    function SecondaryDialogProvider(primaryManager, ownerRequestId) {
        this._ownerRequestId = ownerRequestId;
        this._primaryManager = primaryManager;
    }
    SecondaryDialogProvider_1 = SecondaryDialogProvider;
    SecondaryDialogProvider._create = function (primaryManager, ownerRequestId) {
        return new SecondaryDialogProvider_1(primaryManager, ownerRequestId);
    };
    SecondaryDialogProvider.prototype.alert = function (message, options) {
        var dialog = new AlertDialog_1.default(message);
        return this.show(dialog, options);
    };
    SecondaryDialogProvider.prototype.prompt = function (message, options) {
        var resolve = function () { return; };
        var promise = new Promise(function (res) { return resolve = res; });
        var dialog = new PromptDialog_1.default(message, resolve, options ? options.defaultValue : undefined);
        this.show(dialog, options);
        return promise;
    };
    SecondaryDialogProvider.prototype.show = function (dialog, options) {
        return this._primaryManager._showSecondary(dialog, this._ownerRequestId, options);
    };
    SecondaryDialogProvider = SecondaryDialogProvider_1 = __decorate([
        decorators_1.sealed
    ], SecondaryDialogProvider);
    return SecondaryDialogProvider;
    var SecondaryDialogProvider_1;
}());
exports.SecondaryDialogProvider = SecondaryDialogProvider;


/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_6__;

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_7__;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var ReactDom = __webpack_require__(3);
var office_ui_fabric_react_1 = __webpack_require__(4);
var BaseDialog_1 = __webpack_require__(2);
var AlertDialogReact = (function (_super) {
    __extends(AlertDialogReact, _super);
    function AlertDialogReact() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AlertDialogReact.prototype.render = function () {
        return React.createElement(office_ui_fabric_react_1.DialogContent, { title: 'Alert', subText: this.props.message },
            React.createElement(office_ui_fabric_react_1.DialogFooter, null,
                React.createElement(office_ui_fabric_react_1.PrimaryButton, { onClick: this.props.close, text: 'OK' })));
    };
    return AlertDialogReact;
}(React.Component));
var AlertDialog = (function (_super) {
    __extends(AlertDialog, _super);
    function AlertDialog(message) {
        var _this = _super.call(this) || this;
        _this._message = message;
        return _this;
    }
    Object.defineProperty(AlertDialog.prototype, "config", {
        get: function () {
            return {
                isBlocking: false
            };
        },
        enumerable: true,
        configurable: true
    });
    AlertDialog.prototype.render = function () {
        ReactDom.render(React.createElement(AlertDialogReact, {
            message: this._message,
            close: this.close
        }), this.domElement);
    };
    return AlertDialog;
}(BaseDialog_1.default));
exports.default = AlertDialog;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var ReactDom = __webpack_require__(3);
var office_ui_fabric_react_1 = __webpack_require__(4);
var BaseDialog_1 = __webpack_require__(2);
var PromptDialogReact = (function (_super) {
    __extends(PromptDialogReact, _super);
    function PromptDialogReact() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PromptDialogReact.prototype.render = function () {
        var _this = this;
        this._value = this.props.defaultValue;
        return React.createElement(office_ui_fabric_react_1.DialogContent, { title: 'Prompt', subText: this.props.message },
            React.createElement(office_ui_fabric_react_1.TextField, __assign({ ref: function (c) { return _this._textElement = c; }, onChanged: this._onValueChanged, value: this.props.defaultValue, onKeyDown: this._onKeyDown }, { autoFocus: true } )),
            React.createElement(office_ui_fabric_react_1.DialogFooter, null,
                React.createElement(office_ui_fabric_react_1.Button, { onClick: this.props.close, text: 'Cancel' }),
                React.createElement(office_ui_fabric_react_1.PrimaryButton, { onClick: this._ok, text: 'OK' })));
    };
    PromptDialogReact.prototype.componentDidUpdate = function () {
        if (this._textElement) {
            this._textElement.focus();
        }
    };
    PromptDialogReact.prototype._onKeyDown = function (evt) {
        if (evt.keyCode === 13) {
            this._ok();
        }
    };
    PromptDialogReact.prototype._ok = function () {
        this.props.resolve(this._value);
    };
    PromptDialogReact.prototype._onValueChanged = function (newValue) {
        this._value = newValue;
    };
    __decorate([
        office_ui_fabric_react_1.autobind
    ], PromptDialogReact.prototype, "_onKeyDown", null);
    __decorate([
        office_ui_fabric_react_1.autobind
    ], PromptDialogReact.prototype, "_ok", null);
    __decorate([
        office_ui_fabric_react_1.autobind
    ], PromptDialogReact.prototype, "_onValueChanged", null);
    return PromptDialogReact;
}(React.Component));
var PromptDialog = (function (_super) {
    __extends(PromptDialog, _super);
    function PromptDialog(message, resolve, defaultValue) {
        if (defaultValue === void 0) { defaultValue = ''; }
        var _this = _super.call(this) || this;
        _this._message = message;
        _this._defaultValue = defaultValue;
        _this._resolve = resolve;
        return _this;
    }
    Object.defineProperty(PromptDialog.prototype, "config", {
        get: function () {
            return {
                isBlocking: true
            };
        },
        enumerable: true,
        configurable: true
    });
    PromptDialog.prototype.resolve = function (value) {
        var _this = this;
        this.close().then((function () {
            _this._resolve(value);
        }));
    };
    PromptDialog.prototype.render = function () {
        ReactDom.render(React.createElement(PromptDialogReact, {
            message: this._message,
            defaultValue: this._defaultValue,
            close: this.close,
            resolve: this.resolve
        }), this.domElement);
    };
    __decorate([
        office_ui_fabric_react_1.autobind
    ], PromptDialog.prototype, "resolve", null);
    return PromptDialog;
}(BaseDialog_1.default));
exports.default = PromptDialog;


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Dialog_1 = __webpack_require__(5);
exports.Dialog = Dialog_1.default;
exports.SecondaryDialogProvider = Dialog_1.SecondaryDialogProvider;
var BaseDialog_1 = __webpack_require__(2);
exports.BaseDialog = BaseDialog_1.default;
var DialogManager_1 = __webpack_require__(0);
exports._DialogManager = DialogManager_1.default;


/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_11__;

/***/ }),
/* 12 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_12__;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_bundle_1 = __webpack_require__(14);
var sp_webpart_base_1 = __webpack_require__(15);
var DialogManager_1 = __webpack_require__(0);
var FabricDialogWrapper = (function (_super) {
    __extends(FabricDialogWrapper, _super);
    function FabricDialogWrapper(props) {
        var _this = _super.call(this) || this;
        _this._onDismissed = _this._onDismissed.bind(_this);
        _this.state = {
            isOpen: false,
            isContentReady: false
        };
        return _this;
    }
    FabricDialogWrapper.prototype.render = function () {
        var _this = this;
        if (this.state.dialog) {
            return (React.createElement(office_ui_fabric_react_bundle_1.workaround_Modal, { isOpen: this.state.isOpen, isBlocking: this.state.dialog._configuration.isBlocking, onDismissed: this._onDismissed, onDismiss: this._closeCallback },
                React.createElement("div", { ref: function (c) { return _this._contentDiv = c; } }),
                !this.state.isContentReady &&
                    React.createElement(office_ui_fabric_react_bundle_1.DialogContent, null,
                        React.createElement(sp_webpart_base_1.PlaceholderSpinner, { label: '' }))));
        }
        else {
            return React.createElement("div", null);
        }
    };
    FabricDialogWrapper.prototype.open = function (dialog) {
        var _this = this;
        this._openPromise = new Promise(function (res, rej) {
            _this._resolveOpenPromise = res;
        });
        dialog = dialog || this.state.dialog;
        this.setState({ dialog: dialog, isOpen: true, isContentReady: false });
        return this._openPromise;
    };
    FabricDialogWrapper.prototype.close = function () {
        var _this = this;
        this._closedPromise = new Promise(function (res, rej) {
            _this._resolveClosedPromise = res;
        });
        if (!this.state.isOpen) {
            this._resolveClosedPromise();
        }
        else {
            this.setState({ isOpen: false });
        }
        return this._closedPromise;
    };
    FabricDialogWrapper.prototype.componentWillMount = function () {
        this._detachedElement = document.createElement('DIV');
    };
    FabricDialogWrapper.prototype.componentDidUpdate = function () {
        var _this = this;
        if (this.state.isOpen && this.state.dialog && this._detachedElement && this._contentDiv) {
            if (!this.state.isContentReady) {
                this._detachedElement.innerHTML = '';
                DialogManager_1._getInternalDialogApi(this.state.dialog)._render(this._detachedElement).then((function () {
                    _this.setState({ isContentReady: true });
                }));
            }
            else {
                this._contentDiv.innerHTML = '';
                this._contentDiv.appendChild(this._detachedElement);
                this._resolveOpenPromise();
            }
        }
    };
    FabricDialogWrapper.prototype._onDismissed = function () {
        if (!this.state.isOpen && this._resolveClosedPromise) {
            this._resolveClosedPromise();
        }
    };
    FabricDialogWrapper.prototype._closeCallback = function () {
        if (this.props.closeCallback && this.state.dialog) {
            this.props.closeCallback(this.state.dialog);
        }
    };
    __decorate([
        office_ui_fabric_react_bundle_1.autobind
    ], FabricDialogWrapper.prototype, "render", null);
    __decorate([
        office_ui_fabric_react_bundle_1.autobind
    ], FabricDialogWrapper.prototype, "open", null);
    __decorate([
        office_ui_fabric_react_bundle_1.autobind
    ], FabricDialogWrapper.prototype, "close", null);
    __decorate([
        office_ui_fabric_react_bundle_1.autobind
    ], FabricDialogWrapper.prototype, "componentDidUpdate", null);
    __decorate([
        office_ui_fabric_react_bundle_1.autobind
    ], FabricDialogWrapper.prototype, "_onDismissed", null);
    __decorate([
        office_ui_fabric_react_bundle_1.autobind
    ], FabricDialogWrapper.prototype, "_closeCallback", null);
    return FabricDialogWrapper;
}(React.Component));
exports.default = FabricDialogWrapper;


/***/ }),
/* 14 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_14__;

/***/ }),
/* 15 */
/***/ ((function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_15__;

/***/ }))
/******/ ])}));;